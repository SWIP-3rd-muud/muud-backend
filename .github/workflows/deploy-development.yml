name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
permissions:
  contents: read
jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.DEV_DB_URL }}
          spring.datasource.username: ${{ secrets.DEV_DB_USER }}
          spring.datasource.password: ${{ secrets.DEV_DB_PW }}
          spring.cors.origin.local: ${{ secrets.ORIGIN_LOCAL }}
          spring.cors.origin.server: ${{ secrets.ORIGIN_SERVER }}
          cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET_NAME }}
          cloud.aws.s3.root-path: ${{ secrets.S3_ROOT_PATH }}
          cloud.aws.s3.image-directory: ${{ secrets.S3_IMAGE_DIRECTORY }}
          cloud.aws.credentials.access-key: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secret-key: ${{ secrets.S3_SECRET_KEY }}
          cloud.aws.region.static: ${{ secrets.S3_REGION }}
          jwt.secretKey: ${{ secrets.JWT_KEY }}
          kakao.auth.api-key: ${{ secrets.KAKAO_API_KEY }}
          kakao.auth.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}
          kakao.auth.redirect-url: ${{ secrets.KAKAO_REDIRECT_URL }}
          youtube.api-key: ${{ secrets.YOUTUBE_API_KEY }}
          admin-code: ${{ secrets.ADMIN_KEY }}

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: clean bootJar

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKER_DEV_CONTAINER }} .

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PW }}

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKER_DEV_CONTAINER }}

      - name: Docker image pull & Deploy to EC2
        uses: appleboy/ssh-action@dev
        with:
          host: ${{ secrets.DEV_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKER_DEV_CONTAINER }}:latest
            sudo docker stop $(sudo docker ps -q --filter "name=${{ secrets.DOCKER_DEV_CONTAINER }}") || true
            sudo docker rm $(sudo docker ps -a -q --filter "name=${{ secrets.DOCKER_DEV_CONTAINER }}") || true
            sudo docker run -d --name ${{ secrets.DOCKER_DEV_CONTAINER }} --log-driver=syslog -p 8080:8080 ${{ secrets.DOCKERHUB_USER }}/${{ secrets.DOCKER_DEV_CONTAINER }}:latest
            sudo docker container prune -f
            sudo docker image prune -a -f
      
